name: Passo 3 # Abrir um pull request

# Verifica se o aprendiz completou as tarefas para o passo 3.
# - Dispara quando o usu√°rio cria ou edita o pull request.
# - Verifica o t√≠tulo e a descri√ß√£o do pull request. Adiciona um coment√°rio ao PR.
# - Se todas as verifica√ß√µes passarem, o workflow √© desativado para n√£o ser executado novamente. Assim, o selo de status do workflow mudar√° para verde.

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - edited

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_4_FILE: ".github/steps/4-merge-your-pull-request.md"

jobs:
  find_exercise:
    name: Encontrar Issue do Exerc√≠cio
    uses: dev-pods/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.1.0

  check_step_work:
    name: Verificar trabalho do passo
    runs-on: ubuntu-latest
    needs: find_exercise
    if: |
      !github.event.repository.is_template &&
      github.head_ref == 'my-first-branch'
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Obter modelos de resposta
        uses: actions/checkout@v4
        with:
          repository: dev-pods/exercise-toolkit
          path: exercise-toolkit
          ref: v0.1.0

      - name: Atualizar coment√°rio - parabenizar pelo primeiro PR
        run: |
          message="Voc√™ criou seu primeiro pull request. Bom trabalho! ‚ú®üéâ Agora, vamos verificar seu trabalho."
          gh issue comment "$ISSUE_URL" \
            --body "$message" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verificar trabalho do usu√°rio
        id: check-user-work
        run: |
          # Verifica√ß√µes a serem realizadas
          checks='{
            "pr_title": {
              "name": "T√≠tulo do pull request",
              "passed": true,
              "message": ""
            },
            "pr_description": {
              "name": "Descri√ß√£o do pull request",
              "passed": true,
              "message": ""
            }
          }'

          # Verificar t√≠tulo do pull request
          if [ "${{ github.event.pull_request.title }}" != "Add my first file" ]; then
            checks=$(echo $checks | jq '.pr_title.passed = false')
            checks=$(echo $checks | jq '.pr_title.message = "T√≠tulo incorreto"')
          fi

          # Verificar se existe uma descri√ß√£o do pull request
          if [ "${{ github.event.pull_request.body }}" == "" ]; then
            checks=$(echo $checks | jq '.pr_description.passed = false')
            checks=$(echo $checks | jq '.pr_description.message = "Descri√ß√£o do pull request vazia"')
          fi

          # Verificar se todas as verifica√ß√µes passaram
          passed=$(echo $checks | jq '. | all(.passed?)')

          # Achatar para um array para retorno. Permite itera√ß√£o durante a renderiza√ß√£o.
          results=$(echo $checks | jq 'to_entries | map({name: .key} + .value)')

          # Salvar status de aprova√ß√£o na sa√≠da
          echo "passed=$passed" >> $GITHUB_OUTPUT

          # Salvar resultados na sa√≠da
          echo 'results<<EOF' >> $GITHUB_OUTPUT
          echo $results >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Construir mensagem - resultados do passo
        id: build-message-step-results
        uses: skills/action-text-variables@v1
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results.md
          template-vars: '{
            "step_number": 3,
            "passed": ${{ steps.check-user-work.outputs.passed }},
            "results_table": ${{ steps.check-user-work.outputs.results }},
            "tips": [
              "Issues s√£o para capturar um problema/ideia e poss√≠veis solu√ß√µes.",
              "Pull requests s√£o para desenvolvimento ativo e obten√ß√£o de feedback."
            ]
            }'

      - name: Criar coment√°rio - resultados do passo
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "${{ steps.build-message-step-results.outputs.updated-text }}" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Falhar job se nem todas as verifica√ß√µes passaram
        if: steps.check-user-work.outputs.passed == 'false'
        run: exit 1

      - name: Construir mensagem - passo finalizado
        id: build-message-step-finish
        uses: skills/action-text-variables@v1
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number=4

      - name: Atualizar coment√°rio - passo finalizado
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "${{ steps.build-message-step-finish.outputs.updated-text }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post_step_4_content:
    name: Publicar conte√∫do do passo 4
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Obter modelos de resposta
        uses: actions/checkout@v4
        with:
          repository: dev-pods/exercise-toolkit
          path: exercise-toolkit
          ref: v0.1.0

      - name: Criar coment√°rio - adicionar conte√∫do do passo
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file ${{ env.STEP_4_FILE }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Criar coment√°rio - observando o progresso
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Desativar workflow atual e ativar o pr√≥ximo
        run: |
          gh workflow disable "Passo 3"
          gh workflow enable "Passo 4"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
